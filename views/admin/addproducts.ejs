<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@4.1.3/dist/css/bootstrap.min.css"
        integrity="sha384-MCw98/SFnGE8fJT3GXwEOngsV7Zt27NXFoaoApmYm81iuXoPkFOJwJ8ERdknLPMO" crossorigin="anonymous">
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@4.1.3/dist/js/bootstrap.min.js"
        integrity="sha384-ChfqqxuZUCnJSK3+MXmPNIyE6ZbWh2IMqE241rYiqJxyMiZ6OW/JmZQ5stwEULTy"
        crossorigin="anonymous"></script>
</head>

<body>
    <div class="container mt-5">


        <form method="post" id="adminAddProduct" action="/admin/addproducts" enctype="multipart/form-data"
            onsubmit="return addProductSubmitform()">
            <div class="form-group">
                <label for="pname">Image <span class="text-danger">*</span></label>
                <input type="file" class="form-control" id="imagevalidator" name="myFiles" multiple
                    placeholder="image " required>
            </div>
            <div class="form-group">
                <label for="pname">Product Name <span class="text-danger">*</span></label>
                <input type="text" class="form-control" id="addproductname" name="pname" placeholder="Product Name ">
            </div>
            <div class="form-group">
                <label for="category">Category<span class="text-danger">*</span></label>
                <select id="addProductCategory" class="form-control" name="category">
                    <option selected>select</option>
                    <% category.forEach(function(category) { %>
                        <option value="<%= category._id %>">
                            <%= category.categoryname %>
                        </option>
                        <% }); %>
                </select>
            </div>
            <!-- <div class="form-group">
                <label for="category">Sub-category<span class="text-danger">*</span></label>
                <select id="subcategory-select" class="form-control" name="subcategory">
                   
                </select>
            </div> -->

            <div class="form-group">
                <label for="quantity">Quantity<span class="text-danger">*</span></label>
                <input type="number" class="form-control" name="quantity" id="addProductQuantity"
                    placeholder="Quantity">
            </div>

            <div class="form-group">
                <label for="discription">Description<span class="text-danger">*</span></label>
                <input type="text" class="form-control" name="description" id="addProductDescription"
                    placeholder="Description">
            </div>
            <div class="form-group">
                <label for="discription">Price<span class="text-danger">*</span></label>
                â‚¹<input type="text" class="form-control" name="price" id="addProductPrice" placeholder="Price">
            </div>

            <div class="form-group">
                <input type="submit" value="Add Product" class="btn btn-info btn-block">
            </div>
            <div id="addProducterrorElement"></div>
        </form>
    </div>



    <script>

        // document.querySelector("#category-select").addEventListener("change", function () {
        //     const selectedCategory = this.value;
        //     const requestOptions = {
        //         method: 'POST',
        //         headers: {
        //             'Content-Type': 'application/json'
        //         },
        //         body: JSON.stringify(
        //             {
        //                 category:selectedCategory,
        //             }
        //         )
        //     }
        //     fetch(window.location.origin+'/admin/getsubcategories',requestOptions).then((res)=>res.json())


        //         .then(subcategories => {
        //             const subcategoryList = document.querySelector("#subcategory-select");
        //             subcategoryList.innerHTML = "";
        //             console.log(subcategories);
        //             subcategories.forEach(subcategory => {
        //                 const option = document.createElement("option");
        //                 option.value = subcategory._id;
        //                 option.textContent = subcategory.subcategoryname;
        //                 subcategoryList.appendChild(option);
        //             });

        //         }).catch((err)=>{
        //             console.log("subcategory management error");
        //             res(window.location.origin+'/admin/error')
        //         })
        // });

    </script>

    <script src="//cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <script>

        

        document.querySelector("#imagevalidator").addEventListener("change", function () {
        let fileCount = 0;
        let maxFiles = 3;
            // Loop through the selected files and check their types
            for (let i = 0; i < this.files.length; i++) {
                let fileType = this.files[i].type;
                if (fileType != "image/jpeg" && fileType != "image/jpg" && fileType != "image/png" && fileType != "image/webp") {
                    this.value = "";
                    Swal.fire({
                        title: "Invalid Fileformat",
                        icon: "error",
                        confirmButtonText: "continue"
                    });
                    return;
                }
                // Increment the file count if the file is an image
                fileCount++;
                // Check if the maximum number of files has been reached
            }
            if (fileCount != 3) {
                    this.value = "";
                    Swal.fire({
                        title: "You should upload 3 images",
                        icon: "error",
                        confirmButtonText: "continue"
                    })
                    return;
                }
        });

        const adminAddProduct = document.querySelector('#adminAddProduct');
        const addproductname = adminAddProduct.querySelector('#addproductname');
        const addProductCategory = adminAddProduct.querySelector('#addProductCategory');
        const addProductQuantity = adminAddProduct.querySelector('#addProductQuantity');
        const addProductDescription = adminAddProduct.querySelector('#addProductDescription');
        const addProductPrice = adminAddProduct.querySelector('#addProductPrice');
        const addProducterrorElement = adminAddProduct.querySelector('#addProducterrorElement')

        function addProducthideErrorMessagePass() {
            addProducterrorElement.innerHTML = "";
        }
        function addProductshowErrorMessagePass(message) {

            addProducterrorElement.innerHTML = `<div class="alert text-danger " role="alert">${message}</div>`
            setTimeout(() => {
                addProducterrorElement.innerHTML = `<div></div>`
            }, 5000);

        }

        function addProductSubmitform() {



            
            if (addproductname.value.trim() === "") {

                addProductshowErrorMessagePass("Product name  is Required")
                return false;
            }
            if (!isNaN(addproductname.value.trim())) {

                addProductshowErrorMessagePass("Product name should be a string");

                return false;
            }

            if (addProductCategory.value.trim() === "select") {

                addProductshowErrorMessagePass("Category name  is Required")
                return false;
            }

            if (addProductQuantity.value.trim() === "") {

                addProductshowErrorMessagePass("Quantity  is Required")
                return false;
            }
            if (isNaN(addProductQuantity.value.trim())) {

                addProductshowErrorMessagePass("Quantity should be a number");

                return false;
            }

            if (addProductDescription.value.trim() === "") {

                addProductshowErrorMessagePass("Description  is Required")
                return false;
            }
            if (!isNaN(addProductDescription.value.trim())) {

                addProductshowErrorMessagePass("Description should be a string");

                return false;
            }

            if (addProductPrice.value.trim() === "") {

                addProductshowErrorMessagePass("Price  is Required")
                return false;
            }
            if (isNaN(addProductPrice.value.trim())) {

                addProductshowErrorMessagePass("Price should be a number");

                return false;
            }







            addProducthideErrorMessagePass();
            return true;

        }







    </script>

    <script src="https://code.jquery.com/jquery-3.3.1.slim.min.js"
        integrity="sha384-q8i/X+965DzO0rT7abK41JStQIAqVgRVzpbzo5smXKp4YfRvH+8abtTE1Pi6jizo"
        crossorigin="anonymous"></script>
    <script src="https://cdn.jsdelivr.net/npm/popper.js@1.14.3/dist/umd/popper.min.js"
        integrity="sha384-ZMP7rVo3mIykV+2+9J3UJ46jBk0WLaUAdn689aCwoqbBJiSnjAK/l8WvCWPIPm49"
        crossorigin="anonymous"></script>
</body>

</html>